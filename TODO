* Write more specs
  - There should be detailed specs for most if not all functions


* Switch to using the Grit gem instead of the Git gem
  - This needs to be looked at further, the git gem isn't in 
active development and yet it seems to provide more 
functionality (it does pull/push, reset[hard]) than the grit 
gem.  There are indications that the git gem is deprecated in 
favour of the grit gem, but if the grit gem doesn't provide the 
same functionality as the git gem I hardly see the motivation 
to switch.  That being said, an effort is already being made 
to switch the existing codebase over to using the Grit gem, 
and this can be found in jeffWelling's switch_to_grit branch 
available on github at 
http://github.com/jeffWelling/ticgit/commits/switch_to_grit


* Add ability to export / import tickets and state
  - It would be cool to have the ability to export and import 
the tickets and ticgit state from ticgit.  Ideally, the file 
format exported in should be optionally supplied as an argument. 
Filetypes could include Yaml, Marshal binary files, CSVs..

* Add ability to change how ticgit stores itself
  - The way that ticgit stores itself in one branch is somewhat 
limiting, it does not accomodate situations where you may want 
to have a seperate bug tracker per branch.  Adding the ability 
for ticgit to store it's ticket and state information in a YAML 
file in the branch with the working tree would solve this.

  - This may introduce problems, such as how to decide which 
'storage method' to use when multiple 'instances' exist (and 
perhaps conflict with each other), but this could be mitigated 
by storing a preference such as is already done with the ~/.ticgit 
dir.


* Offer .deb's to install ticgit from the download page
  -  The download page should have .deb's of the most recent 
version of ticgit for people to download and install.
  -  Maybe just an easy way to make your own .deb, so people
can download the source and run a script command to create
a .deb to install? This is already provided in the existing 
rake commands.


* Investigate hiding ticgit branch
  - Schacon hinted at being able to hide the ticgit branch
in one of his git presentations. The video was "Using Git
In Ruby Applications".
    -  If this is implemented, does that mean push/pull's
will change?
    -  Will this effect hosting your project on Github,
or Github also hosting your hidden ticgit branch?

* Sync with Lighthouse?

* Post-commit hooks?
  - Add the ability to automatically sync with lighthouse after
    a change is made to a ticket locally
  - Add ability to automatically push to origin (or configurably, 
    other remotes) after a change to any ticket locally
    
    www.google.com
