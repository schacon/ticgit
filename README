TicGit Distributed Ticketing System
===================================
This project provides a ticketing system built on Git that is kept in a 
separate branch in your projects Git repository.


Prerequisites
===================================
It is assumed that you already have a recent version of the Git revision
control system installed. If it is not available through your package
manager, you can download the latest Git source code from
http://git-scm.com/ instead.

It is also assumed that you have a recent version of rubygems installed.
Older versions, such as the one available on Debian 5.0.5, will not work
out of the box with the new gem repositories. If you are running an
older version of rubygems, you may need to get the latest rubygems
package from http://rubygems.org/ before being able to properly install
the git and ticgit gems.


Installing
===================================
Install the rake and bundler gems, and then run rake from the top of the
source tree to install TicGit. To install as root:

    sudo gem install rake
    sudo gem install bundler
    sudo rake

If you do not have root access, or do not wish to make system changes
without going through your distribution's package manager, you can place
the following into your $HOME/.bashrc file:

    export GEM_HOME=~/gems
    export RUBYOPT=rubygems 
    export PATH=$HOME/gems/bin:$PATH

Source your .bashrc, and you should now be able to install gems into a
non-system directory without root privileges:

    gem install rake
    gem install bundler
    rake


Usage
===================================
See http://github.com/schacon/ticgit/wikis for a bunch of examples. For
a quick start, here is a brief explanation of the basic commands:

    ti help     - show all available commands
    ti assign   - change to whom a ticket is assigned
    ti checkout - checkout a ticket
    ti comment  - add a comment to a ticket
    ti list     - show all tickets
    ti new      - create a new ticket
    ti show     - show details of a specific ticket
    ti state    - change a ticket state (open, resolved, invalid, hold)
    ti tag      - add or delete a tag from a ticket

Most commands can also take an -h flag for additional detail about
command-specific options.


Authors
===================================
See AUTHORS file.
